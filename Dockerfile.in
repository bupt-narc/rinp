# Copyright 2022 The KubeVela Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Note: the ${BIN} needs to be replaced with the actual binary,
# otherwise it won't work. A valid Dockerfile will be generated
# using this template. Refer to Makefile for how it can be done.

# syntax = docker/dockerfile:1.2
# You need to enable Docker BuildKit for this to work.
# Also refer to Makefile for how it can be done.

ARG BUILD_IMAGE=golang:1.18-alpine
ARG BASE_IMAGE=gcr.io/distroless/static:nonroot

# Force native build platform, and cross-build to target platform later.
FROM --platform=${BUILDPLATFORM:-linux/amd64} ${BUILD_IMAGE} as builder

WORKDIR /workspace
COPY go.mod go.mod
COPY go.sum go.sum

ARG GOPROXY
ENV GOPROXY=${GOPROXY}
RUN --mount=type=cache,target=/root/go/pkg \
        go mod download

COPY build       build
COPY cmd         cmd
#COPY api         api
#COPY controllers controllers
COPY pkg         pkg

ARG TARGETARCH
ARG ARCH
ARG TARGETOS
ARG OS
ARG VERSION
ARG GOFLAGS
ARG DIRTY_BUILD
ARG ENTRY

RUN --mount=type=cache,target=/root/.cache/go-build \
        ARCH=${TARGETARCH:-${ARCH:-amd64}}          \
        OS=${TARGETOS:-${OS:-linux}}                \
        OUTPUT=${BIN}                               \
        VERSION=${VERSION}                          \
        GOFLAGS=${GOFLAGS}                          \
        DIRTY_BUILD=${DIRTY_BUILD}                  \
        /bin/sh build/build.sh                      \
        ${ENTRY}

FROM ${BASE_IMAGE}
WORKDIR /
COPY --from=builder /workspace/${BIN} .
ENTRYPOINT ["/${BIN}"]
